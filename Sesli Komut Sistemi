<style>
    #voiceBtn {
      background-color: #28a745;
      color: white;
      border: none;
      padding: 12px 24px;
      font-size: 18px;
      border-radius: 8px;
      cursor: pointer;
      transition: background 0.3s, transform 0.1s;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      display: flex;
      align-items: center;
      gap: 8px;
    }

    #voiceBtn:hover {
      background-color: #218838;
      transform: scale(1.05);
    }

    #voiceBtn:disabled {
      background-color: #ccc;
      cursor: not-allowed;
    }

    #result {
      font-size: 16px;
      font-weight: bold;
      margin-top: 10px;
    }
</style>

<button id="voiceBtn">ðŸŽ™ Sesli Komut</button>
<p id="result">Durum: Bekleniyor...</p>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    window.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;

    if (!window.SpeechRecognition) {
      alert("TarayÄ±cÄ±nÄ±z ses tanÄ±mayÄ± desteklemiyor!");
      document.getElementById("voiceBtn").disabled = true;
      return;
    }

    const recognition = new SpeechRecognition();
    recognition.lang = 'tr-TR';
    recognition.continuous = false;
    recognition.interimResults = false;

    const btn = document.getElementById("voiceBtn");
    const resultText = document.getElementById("result");

    let isListening = false;

    btn.addEventListener("click", function() {
      if (isListening) {
        recognition.stop();
        isListening = false;
        btn.innerHTML = "ðŸŽ™ Sesli Komut";
        resultText.innerText = "Dinleme durduruldu.";
      } else {
        recognition.start();
        isListening = true;
        btn.innerHTML = "ðŸ”´ Dinleniyor...";
        resultText.innerText = "Komut bekleniyor...";
      }
    });

    recognition.onstart = function() {
      resultText.innerText = "Dinleme baÅŸladÄ±...";
    };

    recognition.onresult = function(event) {
      const command = event.results[0][0].transcript.toLowerCase();
      resultText.innerText = "Komut: " + command;

      const speech = new SpeechSynthesisUtterance();

      switch (true) {
        case command.includes("ana sayfa"):
          speech.text = "Ana sayfaya yÃ¶nlendiriyorum.";
          window.location.href = "SEN EKLE";
          break;

        case command.includes("iletiÅŸim"):
          speech.text = "Ä°letiÅŸim sayfasÄ±na gidiyoruz.";
          window.location.href = "SEN EKLE";
          break;

        case command.includes("hakkÄ±nda"):
          speech.text = "HakkÄ±nda sayfasÄ±na yÃ¶nlendiriyorum.";
          window.location.href = "SEN EKLE";
          break;

        case command.includes("arama yap"):
          let searchQuery = command.replace("arama yap", "").trim();
          if (searchQuery.length > 0) {
            speech.text = searchQuery + " iÃ§in arama yapÄ±yorum.";
            window.location.href = `SEN EKLE${searchQuery}`;
          } else {
            speech.text = "LÃ¼tfen aramak istediÄŸiniz kelimeyi sÃ¶yleyin.";
          }
          break;

        case command.includes("blogu paylaÅŸ"):
          speech.text = "Blog baÄŸlantÄ±sÄ±nÄ± kopyaladÄ±m, paylaÅŸabilirsiniz.";
          navigator.clipboard.writeText(window.location.href);
          break;

        case command.includes("modu aÃ§"):
          speech.text = "SÃ¼rekli dinleme modu aÃ§Ä±ldÄ±.";
          recognition.continuous = true;
          break;

        case command.includes("modu kapat"):
          speech.text = "SÃ¼rekli dinleme modu kapatÄ±ldÄ±.";
          recognition.continuous = false;
          break;

        case command.includes("son yazÄ±yÄ± oku"):
          readLastBlogPost();
          return;

        default:
          speech.text = "Bu komutu anlamadÄ±m.";
      }

      window.speechSynthesis.speak(speech);
    };

    recognition.onerror = function(event) {
      resultText.innerText = "Hata: " + event.error;
      btn.innerHTML = "ðŸŽ™ Sesli Komut";
      isListening = false;
    };

    function readLastBlogPost() {
      let latestPost = document.querySelector(".post-title a");
      if (latestPost) {
        let speech = new SpeechSynthesisUtterance(latestPost.innerText);
        window.speechSynthesis.speak(speech);
      } else {
        let speech = new SpeechSynthesisUtterance("Son yazÄ± bulunamadÄ±.");
        window.speechSynthesis.speak(speech);
      }
    }
  });
</script>
